define(["require","exports","../tsSupport/assignHelper","dojo/_base/kernel","../../config","../has","../Logger","../promiseUtils","./loaderConfig","./utils","./WorkerFallback"],function(e,r,n,s,i,d,a,t,f,g,l){function o(o){return t.create(function(r){function a(e){e=g.receiveMessage(e);if(e)switch(e.type){case m:!function(e){var r,a=i.workers.loaderUrl||f.DEFAULT_LOADER_URL;r=null!=i.default?(delete(t=n({},i)).default,JSON.parse(JSON.stringify(t))):JSON.parse(JSON.stringify(i));var t=i.workers.loaderConfig,t=f.default({baseUrl:t.baseUrl,locale:s.locale,has:n({"config-deferredInstrumentation":0,"dojo-test-sniff":0,"esri-secure-context":d("esri-secure-context"),"esri-workers-arraybuffer-transfer":d("esri-workers-arraybuffer-transfer"),"events-keypress-typed":0,"host-webworker":1},t.has),map:n({},t.map),paths:n({},t.paths),packages:t.packages||[]});e.postMessage({type:p,configure:{esriConfig:r,loaderUrl:a,loaderConfig:t}})}(o);break;case v:o.removeEventListener("message",a),o.removeEventListener("error",t),r(o)}}function t(e){e.preventDefault(),o.removeEventListener("message",a),o.removeEventListener("error",t),c.warn("Failed to create Worker. Fallback to execute module in main thread",e),(o=new l).addEventListener("message",a),o.addEventListener("error",t)}o.addEventListener("message",a),o.addEventListener("error",t)})}Object.defineProperty(r,"__esModule",{value:!0});var c=a.getLogger("esri.core.workers");d.add("esri-workers-arraybuffer-transfer",!d("safari")||12<=d("safari"));var u,v=g.MessageType.CONFIGURED,p=g.MessageType.CONFIGURE,m=g.MessageType.HANDSHAKE;try{u=URL.createObjectURL(new Blob(['var globalId=0;var outgoing=new Map;var configured=false;var HANDSHAKE=0;var CONFIGURE=1;var CONFIGURED=2;var OPEN=3;var OPENED=4;var RESPONSE=5;var INVOKE=6;var CANCEL=7;function mapDelete(map,key){map["delete"](key)}function receiveMessage(event){if(!event||!event.data){return null}if(typeof event.data==="string"){return JSON.parse(event.data)}return event.data}function invokeStaticMessage(methodName,data,options){var signal=options&&options.signal;var Deferred=require("dojo/Deferred");var jobId=globalId++;var abortHandler=function(){if(!outgoing.has(jobId)){return}self.postMessage({type:CANCEL,methodName:methodName,jobId:jobId});mapDelete(outgoing,jobId);if(!deferred.isCanceled()){deferred.cancel()}if(signal){signal.removeEventListener("abort",abortHandler)}};if(signal){signal.addEventListener("abort",abortHandler)}var deferred=new Deferred(abortHandler);outgoing.set(jobId,deferred);self.postMessage({type:INVOKE,methodName:methodName,jobId:jobId,data:data});return deferred.promise}function messageHandler(event){var message=receiveMessage(event);if(!message){return}var jobId=message.jobId;switch(message.type){case CONFIGURE:var configuration=message.configure;if(configured){return}self.dojoConfig=configuration.loaderConfig;self.importScripts(configuration.loaderUrl);if(typeof require.config==="function"){require.config(configuration.loaderConfig)}require(["esri/config"],function(esriConfig){for(var name in configuration.esriConfig){if(Object.prototype.hasOwnProperty.call(configuration.esriConfig,name)){esriConfig[name]=configuration.esriConfig[name]}}self.postMessage({type:CONFIGURED})});break;case OPEN:var modulePath=message.modulePath;require(["esri/core/workers/RemoteClient",modulePath],function(RemoteClient,Module){var port=RemoteClient.connect(Module);self.postMessage({type:OPENED,jobId:jobId,data:port},[port])});break;case RESPONSE:if(outgoing.has(jobId)){var deferred=outgoing.get(jobId);mapDelete(outgoing,jobId);if(message.error){deferred.reject(JSON.parse(message.error))}else{deferred.resolve(message.data)}}break}}self.addEventListener("message",messageHandler);self.postMessage({type:HANDSHAKE});'],{type:"text/javascript"}))}catch(e){}var b="Failed to create Worker. Fallback to execute module in main thread";r.createWorker=function(){if(!d("esri-workers"))return o(new l);var r;if(u)try{r=new Worker(u)}catch(e){c.warn(b,event),r=new l}else c.warn(b,event),r=new l;return o(r)}});