var globalId=0,outgoing=new Map,configured=!1,HANDSHAKE=0,CONFIGURE=1,CONFIGURED=2,OPEN=3,OPENED=4,RESPONSE=5,INVOKE=6,CANCEL=7;function mapDelete(e,o){e.delete(o)}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){var t=r&&r.signal,r=require("dojo/Deferred"),a=globalId++,s=function(){outgoing.has(a)&&(self.postMessage({type:CANCEL,methodName:e,jobId:a}),mapDelete(outgoing,a),n.isCanceled()||n.cancel(),t&&t.removeEventListener("abort",s))};t&&t.addEventListener("abort",s);var n=new r(s);return outgoing.set(a,n),self.postMessage({type:INVOKE,methodName:e,jobId:a,data:o}),n.promise}function messageHandler(e){var o=receiveMessage(e);if(o){var r=o.jobId;switch(o.type){case CONFIGURE:var t=o.configure;if(configured)return;self.dojoConfig=t.loaderConfig,self.importScripts(t.loaderUrl),"function"==typeof require.config&&require.config(t.loaderConfig),require(["esri/config"],function(e){for(var o in t.esriConfig)Object.prototype.hasOwnProperty.call(t.esriConfig,o)&&(e[o]=t.esriConfig[o]);self.postMessage({type:CONFIGURED})});break;case OPEN:var a=o.modulePath;require(["esri/core/workers/RemoteClient",a],function(e,o){o=e.connect(o);self.postMessage({type:OPENED,jobId:r,data:o},[o])});break;case RESPONSE:outgoing.has(r)&&(a=outgoing.get(r),mapDelete(outgoing,r),o.error?a.reject(JSON.parse(o.error)):a.resolve(o.data))}}}self.addEventListener("message",messageHandler),self.postMessage({type:HANDSHAKE});